@model IEnumerable<Orcamentos.Models.BusinessUnit>

@{
    ViewData["Title"] = "Index";
}

<h1>Menu</h1>
<h3>Unidades de Negocio</h3>
<p>
    <a asp-action="Create">Criar Novo</a>
</p>
<table class="table" id="orcamentosBuUTable">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Gestor de Negocios
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ativo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BuManager.Nome)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ativo)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalhes</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div id="excelTable" class="d-none">
	<div class="mb-3" id="excelOrcamentos"></div>

	<button class="btn btn-success" id="save-button">Guardar</button>
	<button class="btn btn-success" id="addRowButton">Adicionar linha</button>
</div>


@*<div>@Html.DropDownList("profilesList")</div>*@

<script>

	var buttonTable = document.getElementById("changeTableButton")

	function changeTable() {

		var table = document.getElementById("orcamentosTable");
		var excel = document.getElementById("excelTable")

		if (excel.classList.contains('d-none')) {
			table.classList.add('d-none')
			excel.classList.remove('d-none')
			buttonTable.innerHTML = "Mostrar Tabela"
		}
		else {
			table.classList.remove('d-none')
			excel.classList.add('d-none')
			buttonTable.innerHTML = "Mostrar Excel"
		}

	}

	document.addEventListener('DOMContentLoaded', function () {

		var data = @Html.Raw(Json.Serialize(Model

			.Select(o => new {
			o.Id,
			o.Name,
			BuManagerId = o.BuManager.Id,
			BuManagerName = o.BuManager.Nome,
			o.Ativo
			})));

		var colHeaders = [
			'ID',
			'Nome',
			'Gestor de Negocios ID',
			'Gestor de Negocios',
			'Ativo'];

		var container = document.getElementById('orcamentosBuUTable');

		var mList = @Html.Raw(Json.Serialize(ViewBag.profilesList));
		var result = mList.map((item) => item.text)

		var hot = new Handsontable(container, {
			data: data,
			colHeaders: colHeaders,
			columns: [
				{ data: 'id', readOnly: true },
				{ data: 'nome', type: 'text' },
				{ data: 'buId', readOnly: true },
				{ data: 'gestorDeNegocios', type: 'dropdown', source: result },
				{ data: 'ativo', type: 'checkbox' }
			],

			afterChange: function (changes, source) {
				if (source === 'edit') {
					changes.forEach(function (change) {
						var row = change[0];
						var prop = change[1];
						var newValue = change[3];

						if (prop === 'gestorDeNegocios') {
							var gestor = mList.find(function (p) { return p.text === newValue; });
							hot.setDataAtCell(row, hot.propToCol('buId'), gestor.value);
						}
					});
				}
			},


			language: 'pt-BR',
			rowHeaders: true,
			filters: true,
			dropdownMenu: ['filter_by_condition', 'filter_action_bar'],
			columnSorting: true,
			height: '300px',
			licenseKey: 'non-commercial-and-evaluation' // for non-commercial use only
		});

		const save = document.querySelector('#save-button');

		var tableData = JSON.stringify(hot.getSourceData());

		//console.log(tableData);

		$("#save-button").click(function () {
			hot.validateCells((valid) => {
				if (valid) {
					$.ajax({
						url: '/Orcamentos/UpdateOrcamentos',
						data: JSON.stringify(hot.getSourceData()),
						dataType: 'json',
						contentType: "application/json",
						type: 'POST',
						success: function (result) {
							getTable();
							//location.reload()
						},
						error: function (xhr, status, error) {
							alert("Failure: " + error);
						}
					});
				}
				else {
					alert("error");
				}
			})

		});

		function getTable() {

			$.ajax({
				url: '/Orcamentos/GetTableOrcamentos',
				dataType: 'json',
				contentType: "application/json",
				type: 'GET',
				success: function (data) {
					var tableBody = $('#orcamentosBuUTable tbody');
					tableBody.empty(); // clear existing rows
					$.each(data, function (index, item) {

						var row = '<tr>' +
							'<td>' + item.name + '</td>' +
							'<td>' + item.buManager.Nome + '</td>' +
							'<td>' + '<input type="checkbox" disabled ' + (item.ativo ? 'checked' : '') + '></td>' +
							'<td>' +
							'<a href="/orcamentos/edit/' + item.id + '">Editar</a> | ' +
							'<a href="/orcamentos/details/' + item.id + '">Detalhes</a> | ' +
							'<a href="/orcamentos/delete/' + item.id + '">Eliminar</a>' +
							'</td>' +
							'</tr>';
						tableBody.append(row);
					});
				},
				error: function (xhr, status, error) {
					alert("Failure: " + error);
				}
			});

		}

		function addNewRow() {

			var novaLinha = {
				Nome: "Não defendo",
				BuManagerId: 1,
				BuManager.Nome: "Não defendo",
				Ativo: false
			};


			$.ajax({
				type: "POST",
				url: "/Orcamentos/AddNewRow",
				data: novaLinha,
				dataType: "json",
				success: function (dataModel) {

					hot.loadData(dataModel);
					getTable();
				},
				error: function (xhr, status, error) {
					console.log(error);
				}
			});

		}

		var buttonNewRow = document.getElementById("addRowButton")
		buttonNewRow.addEventListener("click", addNewRow)

	});



</script>
